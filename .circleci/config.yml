version: 2.1
orbs:
  node: circleci/node@5.0.2
jobs:
  build-and-deploy:
    docker:
      - image: cimg/node:20.17.0
    parameters:
      app_id:
        type: env_var_name
      branch:
        type: string
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-cache-v1-{{ checksum "package-lock.json" }}
      - run:
          name: install npm packages
          command: |
            npm ci
      - save_cache:
          paths:
            - ./node_modules
          key: npm-cache-v1-{{checksum "package-lock.json"}}
      - run:
          name: Install Go
          command: |
            GO_VERSION=1.21.3
            wget https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz
            sudo tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz
            echo 'export PATH=$PATH:/usr/local/go/bin' >> $BASH_ENV
            source $BASH_ENV
            go version
      - run:
          name: Install Hugo
          command: |
            HUGO_VERSION=0.134.3
            wget https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz
            tar xzf hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz
            sudo mv hugo /usr/local/bin/
      - run:
          name: Build with npm and Hugo
          command: |
            hugo version
            npm run build
            if [ $? -ne 0 ]; then
              echo "Build failed. Check the logs above for errors."
              exit 1
            fi
            echo "Build completed successfully."      
      - run:
          name: Install doctl
          command: |
            cd ~/
            wget https://github.com/digitalocean/doctl/releases/download/v1.78.0/doctl-1.78.0-linux-amd64.tar.gz
            tar xf ~/doctl-1.78.0-linux-amd64.tar.gz
            sudo mv ~/doctl /usr/local/bin
      - run:
          name: Deploy to DigitalOcean App Platform
          command: |
            doctl auth init -t ${DIGITALOCEAN_ACCESS_TOKEN}
            doctl apps create-deployment ${<< parameters.app_id >>} --wait --force-rebuild
workflows:
  version: 2
  build-deploy-staging:
    jobs:
      - build-and-deploy:
          app_id: DIGITALOCEAN_APP_ID_STAGING
          branch: develop
          filters:
            branches:
              only: develop
  build-deploy-production:
    jobs:
      - build-and-deploy:
          app_id: DIGITALOCEAN_APP_ID_PRODUCTION
          branch: master
          filters:
            branches:
              only: master
